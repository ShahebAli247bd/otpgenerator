let generatedRandOTP;
let validate = false;
const reGen = document.getElementById("regenerate");

//Input takle or track the input
function trackInput() {
  const inputHolderId = document.getElementById("inputHolderId");
  inputHolderId.addEventListener("input", function (e) {
    //target is input
    const target = e.target;
    //value of input
    const value = target.value;

    //Check value of input is number or not
    if (isNaN(value)) {
      target.value = "";
      return;
    }

    let nextElm = target.nextElementSibling;

    if (nextElm) {
      nextElm.focus();
      nextElm.select();
    }
    validateOTP();
  });
}

//generate 4 digit OTP
function generateOTP() {
  generatedRandOTP = Math.floor(1000 + Math.random() * 9000);
  const otpContainer = document.getElementById("otpContainerId");
  otpContainer.innerText = generatedRandOTP;
  OTPexpire();
}

//validate otp
function validateOTP() {
  let inputNumber = "";
  let message = document.getElementById("messageId");
  const inputHolderId = document.getElementById("inputHolderId");
  [...inputHolderId.children].forEach((item) => {
    inputNumber += item.value;
    if (parseInt(inputNumber, 10) === generatedRandOTP && item.value != "") {
      message.classList.remove("fail");
      message.innerText = "OTP Validated successfully";
      message.classList.add("success");
      validate = true;
    } else {
      message.innerText = "Invalid OTP";
      message.classList.remove("success");
      message.classList.add("fail");
      validate = false;
    }
  });
}

function OTPexpire() {
  const tototalTime = 15000;
  const interval = 1000;
  let inSec = 15000 / 1000;
  const timerId = document.getElementById("timerId");
  let clearTimeout = false;

  let currentInterval = setInterval(() => {
    timerId.innerHTML = `Your OTP will expire in ${inSec}sec`;
    inSec -= 1;
    // console.log("i am called in ", inSec, validateOTP());
    if (validate && inSec <= 12) {
      clearInterval(currentInterval);
      timerId.innerHTML = `Correct OTP inputed before ${inSec}sec`;
      clearTimeout = true;
      reGenerateOTP();
      validateOTP();
    }
  }, interval);

  setTimeout(() => {
    if (!clearTimeout) {
      clearInterval(currentInterval);
      timerId.innerHTML = `Your OTP is expired`;

      generateOTP();
    }
  }, tototalTime);
}

// focus Back of input element during pressing backspace, generated by AI
document.addEventListener("DOMContentLoaded", function () {
  var inputs = document.querySelectorAll("input");

  inputs.forEach(function (input) {
    input.addEventListener("keydown", function (event) {
      var key = event.key;
      if (key === "Backspace") {
        var currentIndex = Array.prototype.indexOf.call(inputs, input);

        if (currentIndex > 0) {
          inputs[currentIndex].value = "";
          var prevInput = inputs[currentIndex - 1];
          prevInput.value = "";
          prevInput.focus();
        }
        validateOTP(); //validate when delete
      }
    });
  });
});

function reGenerateOTP() {
  reGen.style.display = "block";
  reGen.addEventListener("click", () => {
    generateOTP();
  });
}
/**
 * Initial Function
 */
function init() {
  console.log("Init...");
  trackInput();
  generateOTP();
}
init();
